plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'com.avast.gradle.docker-compose' version '0.10.10'
    id "org.sonarqube" version "2.8"
    id 'jacoco'
}

group = 'in.projecteka'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

sonarqube {
    properties {
        property "sonar.projectKey", "ProjectEKA_hdaf"
        property "sonar.organization", "projecteka"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", "dd5db84dbf8f6dbd393291c26fe038ab54f00072"

        property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
    }
}

dockerCompose {
    useComposeFiles = ['docker-compose.yml']
}

task up(type: Exec) {
    dependsOn(build)
    commandLine './gradlew', 'composeUp'
}

task down(type: Exec) {
    commandLine './gradlew', 'composeDown'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.jeasy:easy-random-core:4.2.0'
    testImplementation "com.squareup.okhttp3:okhttp:4.6.0"
    testImplementation "com.squareup.okhttp3:mockwebserver:4.6.0"
    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'io.vertx:vertx-pg-client:3.9.0'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.nimbusds:nimbus-jose-jwt:8.16'
    implementation 'io.vavr:vavr:0.10.2'
    implementation 'org.passay:passay:1.6.0'
    implementation 'io.lettuce:lettuce-core:5.3.0.RELEASE'
    compile 'net.logstash.logback:logstash-logback-encoder:6.3'
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    additionalSourceDirs.from = files(sourceSets.main.allJava.srcDirs)
    reports {
        html.enabled true
        xml.enabled true
        csv.enabled false
        html.destination file("build/reports/jacoco/html")
    }
    executionData.from = files('build/jacoco/test.exec')
}