plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'com.avast.gradle.docker-compose' version '0.10.7'
	id "org.sonarqube" version "2.8"
	id 'jacoco'
}

group = 'in.org.projecteka'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

sonarqube {
	properties {
		property "sonar.projectKey", "ProjectEKA_hdaf"
		property "sonar.organization", "projecteka"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.login", "dd5db84dbf8f6dbd393291c26fe038ab54f00072"

		property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
	}
}

dockerCompose {
	useComposeFiles = ['docker-compose.yml']
}

task up(type: Exec) {
	dependsOn(build)
	commandLine './gradlew', 'composeUp'
}

task down(type: Exec) {
	commandLine './gradlew', 'composeDown'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
	compileOnly 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	compile group: 'org.jeasy', name: 'easy-random-core', version: '4.1.0'
	testImplementation("com.squareup.okhttp3:okhttp:4.3.1")
	testImplementation "com.squareup.okhttp3:mockwebserver:4.3.1"

}

test {
	useJUnitPlatform()
}

jacocoTestReport {
	additionalSourceDirs.from = files(sourceSets.main.allJava.srcDirs)
	reports {
		html.enabled true
		xml.enabled true
		csv.enabled false
		html.destination file("build/reports/jacoco/html")
	}
	executionData.from = files('build/jacoco/test.exec')
}