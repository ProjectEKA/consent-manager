version: '3'
services:
  rabbitmq:
    image: "rabbitmq:3"
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"

  keycloak:
    image: "jboss/keycloak:9.0.2"
    container_name: keycloak
    hostname: keycloak
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: welcome
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
    depends_on:
      - postgres
    ports:
      - "9001:8080"

  postgres:
    image: "postgres:latest"
    container_name: postgres
    hostname: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init.sql:/docker-entrypoint-initdb.d/db-init.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: "pg_isready -h localhost -p 5432 -q -U postgres"
      interval: 2s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"

  keycloak_setup:
    image: "bharatak/eka-keycloak-setup"
    environment:
      KEYCLOAK_SERVER: http://keycloak:8080/auth
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: welcome
    command: "sh -c 'dockerize -wait http://keycloak:8080 -timeout 240s && java -jar /app.jar'"
    depends_on:
      - keycloak

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    container_name: elasticsearch
    hostname: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.2
    container_name: kibana
    hostname: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  cm-db-setup:
    image: projecteka/cm-db-initializer
    container_name: cm-db-setup
    environment:
      - 'JAVA_TOOL_OPTIONS=-Djdbc.url=jdbc:postgresql://postgres:5432/consent_manager -Djdbc.username=postgres -Djdbc.password=password'
    depends_on:
      - postgres

  hiu-db-setup:
    image: projecteka/hiu-db-initializer
    container_name: hiu-db-setup
    environment:
      - 'JAVA_TOOL_OPTIONS=-Djdbc.url=jdbc:postgresql://postgres:5432/health_information_user -Djdbc.username=postgres -Djdbc.password=password'
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local
