server:
  port: 9000
consentmanager:
  consentservice:
    defaultPageSize: 20
    maxPageSize: 100
    url: http://localhost:9000
    consentRequestExpiry: 60
  scheduler:
    consentExpiryCronExpr: '0 0 * ? * *'
    consentRequestExpiryCronExpr: '0 0 0/12 ? * *'
  clientregistry:
    XAuthToken: ${CLIENTREGISTRY_XAUTHTOKEN}
    clientId: consent-manager
    url: http://localhost:8080
    jwkUrl: http://localhost:8080/certs
  lockeduserservice:
    maximumInvalidAttempts: 5
    coolOfPeriod: 8
  userservice:
    url: http://localhost:9000
    transactionPinDigitSize: 4
    transactionPinTokenValidity: 2
    userCreationTokenValidity: 5
    userIdSuffix: "@ncg"
    maxOtpAttempts: 2
    maxOtpAttemptsPeriodInMin: 1
    otpAttemptsBlockPeriodInMin: 1
    maxIncorrectPinAttempts: 5
    otpInvalidAttemptsBlockPeriodInMin: 1
    otpMaxInvalidAttempts: 3
  otpservice:
    url: http://localhost:5000
    identifiers:
      - MOBILE
    expiryInMinutes: 5
  keycloak:
    baseUrl: http://localhost:9001/auth
    clientId: consent-manager
    clientSecret: ${KEYCLOAK_CLIENTSECRET}
    userName: consent-service-admin-user
    password: welcome
    jwkUrl: http://localhost:9001/auth/realms/consent-manager/protocol/openid-connect/certs
    issuer: http://localhost:9001/auth/realms/consent-manager
  jwt:
    secret: secret_salt
  db:
    host: localhost
    port: 5432
    schema: consent_manager
    user: postgres
    password: password
    poolSize: 5
  dataflow:
    consentmanager:
      url: http://localhost:9000
  linkservice:
    url: http://localhost:9000
    txnTimeout: 5000
  listeners:
    maximumRetries: 10
    # In milliseconds
    retryInterval: 1000
  gatewayservice:
    baseUrl: http://localhost:8000
    requestTimeout: 5000
    enabled: true
spring:
  rabbitmq:
    host: localhost
    port: 5672